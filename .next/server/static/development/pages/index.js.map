{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./client-config.js","webpack:///./components/ApolloClient.js","webpack:///./components/Header.js","webpack:///./components/Layout.js","webpack:///./components/Nav.js","webpack:///./components/Product.js","webpack:///./pages/index.js","webpack:///external \"apollo-boost\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-link-http\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/head\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const clientConfig = {\n    siteUrl: 'http://localhost:3000',\n    graphqlUrl: 'https://tashidhondup.website/graphql',\n};\nexport default clientConfig;","// import fetch from 'node-fetch';\nimport fetch from 'isomorphic-unfetch';\nimport { ApolloClient } from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport clientConfig from '../client-config';\n\nconst client = new ApolloClient ( {\n    link: createHttpLink( {\n        uri: clientConfig.graphqlUrl,\n        fetch: fetch\n    }),\n    cache: new InMemoryCache()\n});\n\nexport default client;","import Nav from \"./Nav\";\n\nconst Header = () => {\n    return (\n        <div>\n            <Nav />\n        </div>\n    );\n}\n\nexport default Header;","import Head from 'next/head';\nimport Header from \"./Header\";\nimport '../styles/style.css';\n\nconst Layout = (props) => {\n    return (\n        <div>\n            <Head>\n                <title>WooCommerce NextJs</title>\n                <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n                <link rel=\"stylesheet\" href=\"https://bootswatch.com/4/lux/bootstrap.min.css\" />\n                {/* <link rel=\"stylesheet\" href=\"../styles/style.css\" /> */}\n            </Head>\n            <Header />\n                <div className=\"container\">\n                    { props.children }  \n                </div>\n        </div>\n    );\n}\n\nexport default Layout;","const Nav = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n            <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">About</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Categories</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">My Account</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Nav;\n","const Product = (props) => {\n    const { product } = props\n    return(\n        <div className=\"col-lg-3 colmd-6 col-sm-12 card mb-3 text-center\">\n            <h3 className=\"card-header\">{product.name}</h3>\n            <img className=\"\" src={product.images[0].src} alt=\"Product image\" />\n            <div className=\"card-body\">\n                <h6 className=\"card-subtitle text-muted\">AU {product.price}</h6>\n                <a href=\"\" className=\"btn btn-secondary text-center\">View</a>\n            </div>\n        </div>\n    );\n}\n\nexport default Product;","import Layout from \"../components/Layout\";\nimport fetch from 'isomorphic-unfetch';\nimport clientConfig from \"../client-config\";\nimport Product from \"../components/Product\";\nimport client from \"../components/ApolloClient\";\n\nconst Index = (props) => {\n    // console.warn(props);\n    const { products } = props;\n    return (\n        <Layout>\n            <div className=\"product-container row\">\n                {products.length ? (\n                    products.map(product => <Product product={product} key={product.id} />)\n                ) : ''}\n            </div>\n        </Layout>\n    );\n}\n\nIndex.getInitialProps = async () => {\n    const res = await fetch(`${clientConfig.siteUrl}/getProducts`);\n    const productsData = await res.json();\n    return {\n        products: productsData,\n    }\n}\n\nexport default Index;","module.exports = require(\"apollo-boost\");","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-link-http\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAQA;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5BA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}